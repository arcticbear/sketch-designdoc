var com = {};

com.mamuso = {
  // Configuration variables
  config: {
    baseDir: null,
    logo: null,
    primary: "#333333",
    secondary: "#FFFFFF"
  },

  // Set of tools
  tools: {
    // Find an object by name in a given scope
    findObjectsByName: function(name,scope) {
      var predicate = NSPredicate.predicateWithFormat("name == %@",name);
      return scope.filteredArrayUsingPredicate(predicate);
    },

    // Find an object by type in a given scope
    findObjectsOfType: function(classType,scope) {
      var predicate = NSPredicate.predicateWithFormat("self isKindOfClass: %@",classType);
      return scope.filteredArrayUsingPredicate(predicate);
    },

    // Get the solid color of a shape
    getColor: function(object) {
      try{
        var fills = object.style().fills();
        if (fills.count() > 0 && fills.firstObject().fillType() == 0) { 
          return "#" + fills.firstObject().color().hexValue().toString();
        }
      } catch (e) {
        return nil;
      }
    },

    // Read the settings page if present
    readSettings: function(scope) {
      var settingsPage = com.mamuso.tools.findObjectsByName("_settings", scope);
      if([settingsPage count] == 1) {
        var page = settingsPage.firstObject(),
        layers = [page children];

        // Check if we have defined a primary color
        var primary = com.mamuso.tools.getColor(com.mamuso.tools.findObjectsByName("_primary", layers).firstObject());
        if (primary) { 
          com.mamuso.config.primary = primary;
        }

        // Check if we have defined a secondary color
        var secondary = com.mamuso.tools.getColor(com.mamuso.tools.findObjectsByName("_secondary", layers).firstObject());
        if (secondary) { 
          com.mamuso.config.secondary = secondary;
        }

        // Check if we have a logo, we will export it later
        var logo = com.mamuso.tools.findObjectsByName("_logo", layers)
        com.mamuso.config.logo = (logo.count() > 0) ? true : false;
      }
    },

    // Export aaaall the images
    exportImages: function(scope) {

    },

    // Let the user specify a directory
    getDirFromPrompt: function() {
      var panel = [NSOpenPanel openPanel];
      [panel setMessage:"ðŸŽŸ Where do you want to export the documents?"];
      [panel setCanChooseDirectories: true];
      [panel setCanChooseFiles: false];
      [panel setCanCreateDirectories: true];
      var defaultDir = com.mamuso.config.doc.fileURL().URLByDeletingLastPathComponent();
      log("ok");
      [panel setDirectoryURL:defaultDir];

      if ([panel runModal] == NSOKButton) {
        var message = [panel filename];
        return message;
      }
    }
  }
};